######################
# Python Syntax Notes #
######################

# ========================================================================
# Functions
# ========================================================================

def say_hi(name, age):
    print("Hello " + name + "You are " + str(age))


say_hi("Mike", 35)
say_hi("Steve", 70)

# ------------------------------------

def cube(num):
    return num*num*num


print(cube(3))

# ------------------------------------

def greet_user(first_name, last_name):
    print(f"Hello, {first_name} {last_name}")
    print("Welcome")


greet_user("John", "Smith")
greet_user(first_name="Ivan", last_name="Tony")

# ------------------------------------

def square(number):
    return number * number


print(square(3))

# ------------------------------------

def func_emoji(message):
    words = message.split(" ")
    emoji_map = {
        ":)": "ðŸ™‚",
        ":(": "ðŸ˜ž",
        "xD": "ðŸ˜†",
        "rofl": "ðŸ¤£"
    }
    output = ""
    for word in words:
        output += emoji_map.get(word, word) + " "
    return output


message = input("> ")
print(func_emoji(message))

# ------------------------------------

def raise_to_power(base_num, pow_num):
    result = 1
    for index in range(pow_num):
        result = result * base_num
    return result


print(raise_to_power(3, 2))

# ------------------------------------

def translate(phrase):
    translation = ""
    for letter in phrase:
        if letter.lower() in "aeiou":
            if letter.isupper():
                translation = translation + "G"
            else:
                translation = translation + "g"
        else:
            translation = translation + letter
    return translation


print(translate(input("Enter a phrase: ")))



# ========================================================================
# If Statements
# ========================================================================

is_male = True
is_tall = True

if is_male and is_tall:
    print("You are a tall male")
elif is_male and not (is_tall):
    print("You are a short male")
elif not(is_male) and is_tall:
    print("You are not a male but are tall")
else:
    print("You are not a male and not all")

# ------------------------------------

name = input("Enter your name: ")

if len(name) < 3:
    print("Error: Name must be at least 3 characters")
elif len(name) > 10:
    print("Name must be a maximum of 10 characters")
else:
    print("Valid name")

# ------------------------------------

first = "Rich"
last = ""

if first and last:
	print(f"Full name: {first} {last}")
elif first:
	print(f"First name: {first}")
elif last:
	print(f"Last name: {last}")

# ------------------------------------

weight = int(input("Weight: "))
unit = input("(L)lbs or (K)g: ")

if unit.upper() == "L":
    converted = weight * 0.45
    print(f"You are {converted} kilos")
else:
    converted = weight // 0.45
    print(f"You are {converted} pounds")

# ------------------------------------

num1 = float(input("Enter first number: "))
op = input("Enter operator: ")
num2 = float(input("Enter second number: "))

if op == "+":
    print(num1 + num2)
elif op == "-":
    print(num1 - num2)
elif op == "/":
    print(num1 / num2)
elif op == "*":
    print(num1 * num2)
else:
    print("Invalid operator")



# ========================================================================
# Dictionaries
# ========================================================================

monthConversions = {
    "Jan": "January",
    "Feb": "February",
    "Mar": "March",
    "Apr": "April",
    "May": "May",
    "Jun": "June",
    "Jul": "July",
    "Aug": "August",
    "Sep": "September",
    "Oct": "October",
    "Nov": "November",
    "Dec": "December"
}

print(monthConversions["Jan"])
print(monthConversions.get("Dec"))
print(monthConversions.get("Hello", "'Hello' not in dictionary!"))

# ------------------------------------

customer = {
    "name": "John Smith",
    "age": 30,
    "is_verified": True,
}

print (customer.get("age"))
print (customer.get("email", "Default response")) #will return â€˜Noneâ€™ if key doesnâ€™t exist
print (customer["name"])
customer["birthdate"] = "1st Jan 1980"

# ------------------------------------

list_of_points = [(1, 2), (2, 3), (4, 5)]
for x, y in list_of_points:
	print(f"x: {x}, y: {y}")

# ------------------------------------

ages = {
	'kevin': 59, 
	'bob': 40, 
	"kayla": 21
}

for name, age in ages.items():
	print(f"Person named: {name}")
	print(f"Age of: {age}")
    
# ------------------------------------

digitmap = {
    "1": "One",
    "2": "Two",
    "3": "Three",
    "4": "Four"
}

phone = input("Phone: ")
output = ""

for number in phone:
    output += digitmap.get(number, "!") + " "
print (output)

# ------------------------------------

message = input("> ")
words = message.split(" ")
emoji_map = {
    ":)": "ðŸ™‚",
    ":(": "ðŸ˜ž",
    "xD": "ðŸ˜†",
    "rofl": "ðŸ¤£"
}
output = ""
for word in words:
    output += emoji_map.get(word, word) + " "
print(output)



# ========================================================================
# While Loop
# ========================================================================

i = 1
while i <= 5:
    print(i)
    print('*' * i)
    i += 1
print("Done")

# ------------------------------------

count = 0
while count < 10:
	if count % 2 == 0:
		count += 1
		coninue
	print(f"We're counting odd numbers: {count}")
	count += 1
    
# ------------------------------------

secret_number = 9
guess_count = 0
guess_limit = 3
while guess_count < guess_limit:
    guess = int(input("Guess number: "))
    guess_count += 1
    if guess == secret_number:
        print("You win!")
        break
else:
    print("Sorry you failed!")

# ------------------------------------

secret_letter = "X"
guess_count = 0
guess_limit = 3
while guess_count < guess_limit:
    guess = input("Guess the letter: ")
    guess_count += 1
    if guess.upper() == secret_letter:
        print("You win!")
        break
else:
    print("You failed!")

# ------------------------------------

secret_word = "giraffe"
guess = ""
guess_count = 0
guess_limit = 3
out_of_guesses = False

while guess != secret_word and not out_of_guesses:
    if guess_count < guess_limit:
        guess = input("Enter guess: ")
        guess_count += 1
    else:
        out_of_guesses = True

if out_of_guesses:
    print("Out of guesses!")
else:
    print("You win!")

# ------------------------------------

command = ""
started = False
while True:
    command = input("> ").lower()
    if command == "start":
        if started:
            print("Car already started!")
        else:
            started = True
            print("Car started")
    elif command == "stop":
        if not started:
            print("Car already stopped")
        else:
            started = False
            print("Car stopped....")
    elif command == "help":
        print("""
start - to start the car
stop - to stop the car
quit - to quit
        """)
    elif command == "quit":
        print('Goodbye!')
        break
    else:
        print("Sorry I don't understand that!")



# ========================================================================
# For Loop
# ========================================================================

for item in 'Python':
    print(item)

# ------------------------------------

for list in ['Rich', 'Georgie', 'Liam']:
    print(list)

# ------------------------------------

for number in [1, 2, 3, 4, 5]:
    print(number)

# ------------------------------------

for numbers in range(10):
    print(numbers)

# ------------------------------------

prices = [10, 20, 30]
total = 0
for price in prices:
    total += price
print(f"Total: {total}")

# ------------------------------------

numbers = [2, 2, 2, 2, 5]
for x_count in numbers:
    output = ''
    for count in range(x_count):
        output += 'x'
    print(output)

# ------------------------------------

numbers = [3, 6, 2, 8, 4, 10]
max = numbers[0]
for number in numbers:
    if number > max:
        max = number
print(max)

# ------------------------------------

numbers = [8, 8, 7, 8, 9, 9, 5, 4, 4, 1, 1, 2, 3, 3, 10]
final = []
for item in numbers:
    if item not in final:
        final.append(item)
final.sort()
print(final)

# ------------------------------------

digitmap = {
    "1": "One",
    "2": "Two",
    "3": "Three",
    "4": "Four"
}

phone = input("Phone: ")
output = ""

for number in phone:
    output += digitmap.get(number, '!') + " "
print (output)

# ------------------------------------

message = input("> ")
words = message.split(" ")
emoji_map = {
    ":)": "ðŸ™‚",
    ":(": "ðŸ˜ž",
    "xD": "ðŸ˜†",
    "rofl": "ðŸ¤£"
}
output = ""
for word in words:
    output += emoji_map.get(word, word) + " "
print(output)



# ========================================================================
# 2D Lists
# ========================================================================

number_grid = [
    [1, 2, 3],
    [4, 5, 6],
    [0]
]

print(number_grid[0][0])



# ========================================================================
# Nested For Loop
# ========================================================================

number_grid = [
    [1, 2, 3],
    [4, 5, 6],
    [7, 8, 9],
    [0]
]

for row in number_grid:
    for col in row:
        print(col)



# ========================================================================
# Example Programs
# ========================================================================

# BMI Calculator, using functions for user input and calculations with if statements. Executed with while loop calling functions

def gather_info():
    height = float(nput("What is your height? (inches or meters) "))
    weight = float(nput("What is your weight? (pounds or kilograms) "))
    unit = input("Are your mearsurements in metric or imperial units? ").lower().strip()
    return (height, weight, unit)

def calculate_bmi(weight, height, unit='metric'):
    if unit == 'metric':
        bmi = (weight / (height ** 2))
    else:
        bmi = 703 * (weight / (height ** 2))
    print(f"Your BMI is {bmi}")

while True:
    height, weight, unit = gather_info()
    if unit.startswith('i'):
        calculate_bmi(weight, unit='imperial', height=height)
    elif unit.startswith('m'):
        calculate_bmi(weight, height)
    else:
        print("Error: Unknown measurement system. Please use imperial or metric.")
